To solve sub-qubo problems on the ising solver you will need to invoke qbsolv with `sudo`.

Run `qbsolv -h` for documentation of standard qbsolv arguments.

See `qbsolv -q` for documentation of input format.

================
New qbsolv args
================

-I
If present, use ising chip to solve sub-problems.

-z numSamples
Number of solutions to sample from ising chip. Defaults to 10.

-p preSearchPassFactor
Scale the amount of classical tabu search to be performed before decomposing problem to
sub-problems. Defaults to 0. Standard qbsolv uses 6500.

-g globalSearchPassFactor
Scale the amount of classical tabu search to be performed between each round of sub-problem
solutions. Defaults to 0. Standard qbsolv uses 1700.

-d
Final output will be printed as comma delimited data, allowing for aggregation of multiple runs in a
single data file.

=========
Examples:
=========

$ sudo ./qbsolv -I -i ./data/bqp100_5.qubo

$ sudo ./qbsolv -p 100 -g 200 -z 5 -I -i ./data/bqp100_5.qubo

======
Output
======
Delimited output has the format:

input file name, preSearchPassFactor, globalSearchPassFactor, finalEnergy, num sub-qubos solved, pre tabu search time, global tabu search time, time spent on sub-problems, total time, prng seed

Eg:
$ sudo ./qbsolv -I -d -r 321 -m -p 0 -g 100 -i ./data/bqp500_2.qubo
./data/bqp500_2.qubo, 0, 100, 128339.0, 180, 0.0000, 1.3778, 26.3343, 27.7797, 321
